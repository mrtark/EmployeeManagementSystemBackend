##########################################################################
### System config #############################################################
# Port
server.port=5555
#logging.level.org.springframework.boot.autoconfigure=ERROR
#spring.main.allow-bean-definition-overriding=true


# security.basic.enable= false
# security.ignored=/**
# server.error.include-exception=true
# server.error.include-binding-errors=always
# server.error.include-message=always

# spring.application.name=Eployee


# spring.application.adminPage.enabled=true


## http://127.1.1.1:8080/actuator
# server.address=127.0.0.0

########################################################################
### Context  #############################################################
##localhost:8080/java
# server.servlet.context-path=/java

server.servlet.context-parameters.my_special.name=Murat
user.surname=Ar?k

########################################################################
### Profiles #############################################################
#spring.profiles.active=frontend
#spring.profiles.active=backend

##################################################################################
### Prometheus: Monitoring   #####################################################
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

### Redis config #############################################################
#spring.cache.type=redis
#spring.cache.host=localhost
#spring.cache.port=6379

### GraphQL config #############################################################
# GraphQL
#graphql.servlet.mapping=/graphql
#graphql.servlet.enabled=true
#graphql.servlet.corsEnabled=true
## GraphiQL
#graphiql.mapping=/graphiql
#graphiql.endpoint=/graphql
#graphiql.enabled=true
#graphiql.cdn.enabled=true
#graphiql.cdn.version=0.11.11
#graphql.tools.schema-location-pattern=**/*.graphiql
#graphql.graphiql.enabled=true
#spring.graphql.graphiql.enabled=true
#spring.graphql.graphiql.path=/graphiql

### Session Time out  ############################################################
# server.servlet.session_timeout=1m
server.servlet.session_timeout=30m

# server.servlet.session.cookie.http-only=true
# server.servlet.session.cookie.secure=true

########################################################################
###  ##################
#spring.jpa.properties.javax.persistence.validation.mode=none

########################################################################
### White label  #############################################################
server.error.whitelabel.enabled=true

########################################################################
### Debug #############################################################
# debug=true

########################################################################
### Swagger(Open Api config)  #########################################
# localhost:8080/swagger-ui.html
# swagger open api 3.0

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui/index.html
#springdoc.packagesToScan=com.muratarik.api.testApi
#springdoc.pathsToMatch=/**

########################################################################
### Log ####################################################################
logging.file.name=./log/blog.log

#logging.level.org.springframework=DEBUG

logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
# logging.level.org.springframework.security.web.FilterChainProxy=DEBUG


# logging.file.path=./

# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Log LEVEL (7)
# O F E W I D T
# OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE
logging.level.root=INFO

########################################################################
### JWT ###############################################################
#jwt.secret=secretOfUsDontBeShy
#jwt.expire.time=86400000
#jwt.token.prefix=Bearer
#jwt.header.string=Authorization
#jwt.secret=muratarik

########################################################################
### DevTools #############################################################
# DevTool restart Enable
# spring.devtools.restart.enabled=true
# spring.devtools.restart.enabled=false
# spring.devtools.livereload.enabled=true
# spring.devtools.livereload.port=35729


########################################################################
### Spring Secuirity  ############################################################
#spring.security.user.name=MuratArik
##spring.security.user.password=1qW@ert2
#spring.security.user.roles=ADMIN

# securityConfigurations
# .formLogin()
# .loginPage("/login")
# .usernameParameter("username")
# .passwordParameter("password")

########################################################################
### Mail #############################################################
#spring.mail.default-encoding=UTF-8
##  Mail server adress
#spring.mail.host=smtp.mrtark.com
#spring.mail.port=587
#spring.mail.username=contact@mrtark.com
#spring.mail.password=
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000

########################################################################
### Database  #############################################################
## H2Database
logging.level.org.springframework.jdbc.core = TRACE
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.show-sql=true

#jpa > none update create, create-drop, validate
spring.jpa.hibernate.ddl-auto = update

## Generic JNDI Data Source data 44
##in Memory
##spring.datasource.url=jdbc:h2:mem:

## Directory on Disk
## spring.datasource.url=jdbc:h2:file:C:/data/

##Current User Directory
##spring.datasource.url=jdbc:h2:file:~/

## Current Working Directory
## http://localhost:8080/h2-console
## following setting h2-console
spring.h2.console.settings.web-allow-others=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:file:./memory_persist/employee_database
##spring.datasource.url=jdbc:h2:file:./memory_persist/register;useSSL=falseDB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
spring.datasource.username=root
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

## Mysql
##CREATE SCHEMA `employee_database` DEFAULT CHARACTER SET utf8 COLLATE utf8_turkish_ci ;root
## use employee_database;
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/register?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root

## Mongo DB
## Robo 3T
##  @SpringBootApplication içinde bunu yaz ==> @EnableMongoRepositories
##  @Repository ==> public interface IDeneme extends MongoRepository<EntityName,Long>{}
#spring.data.mongodb.database=mongodb
#spring.data.mongodb.uri=mongodb://localhost:27017

## Postgresql
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/employee_database
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
